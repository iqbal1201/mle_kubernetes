name: CI/CD Pipeline for ML Model with Data Processing

on:
  push:
    branches:
      - main  # Trigger workflow on push to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger workflow on pull request to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GCP_PROJECT_ID: ml-kubernetes-448516

    steps:
      # Checkout the repository to get the code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Python environment for running the scripts
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      # Install project dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 1: Run data processing script (data_process.py)
      - name: Run Data Processing
        run: |
          python data_process.py

      # Step 2: Train the model (model_train.py) to generate model_tf.h5
      - name: Train Model
        run: |
          python model_train.py

      # - name: Copy model_tf.h5 for Docker build
      #   run: |
      #     cp model_tf.h5 .

      # Login to GCR
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.5.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_KEY }}

      # Build Docker image with the processed data and the trained model
      - name: Build Docker image
        run: |
          docker build -t gcr.io/$GCP_PROJECT_ID/insurance-ml-app:$GITHUB_SHA .

      # # Log in to Google Container Registry (GCR)
      # - name: Log in to Google Container Registry
      #   run: |
      #     echo ${{ secrets.GCP_KEY }} | docker login -u _json_key --password-stdin https://gcr.io

      # Push Docker image to Google Container Registry (GCR)
      - name: Push Docker image to GCR
        run: |
          docker push gcr.io/$GCP_PROJECT_ID/insurance-ml-app:$GITHUB_SHA

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Checkout the repository again in the deploy job
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Google Cloud SDK
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.5.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_KEY }}

      # Configure kubectl to interact with GKE
      - name: Configure kubectl
        run: |
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER_NAME }} --zone ${{ env.GKE_ZONE }} --project ${{ env.GCP_PROJECT_ID }}

      # Deploy the app to GKE
      - name: Deploy to GKE
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml